#if !defined SURFACE_GLASS
#define SURFACE_GLASS
    float BAK1(in float x) {
        return sqrt(1.0+1.12365662/(1.0-0.00644742752/pow(x,2.0))+0.309276848/(1.0-0.0222284402/pow(x,2.0))+0.881511957/(1.0-107.297751/pow(x,2.0)));
    }
    float BK7(in float x) {
        return sqrt(1.0+1.03961212/(1.0-0.00600069867/pow(x,2.0))+0.231792344/(1.0-0.0200179144/pow(x,2.0))+1.01046945/(1.0-103.560653/pow(x,2.0)));
    }
    float BAF10(in float x) {
        return sqrt(1.0+1.5851495/(1.0-0.00926681282/pow(x,2.0))+0.143559385/(1.0-0.0424489805/pow(x,2.0))+1.08521269/(1.0-105.613573/pow(x,2.0)));
    }
    float F2(in float x) {
        return sqrt(1.0+1.34533359/(1.0-0.00997743871/pow(x,2.0))+0.209073176/(1.0-0.0470450767/pow(x,2.0))+0.937357162/(1.0-111.886764/pow(x,2.0)));
    }
    float F5(in float x) {
        return sqrt(1.0+1.3104463/(1.0-0.00958633048/pow(x,2.0))+0.19603426/(1.0-0.0457627627/pow(x,2.0))+0.96612977/(1.0-115.011883/pow(x,2.0)));
    }
    float LAK1(in float x) {
        return sqrt(1.0+0.964886701/(1.0-91.193933/pow(x,2.0))+0.468480585/(1.0-0.0205810529/pow(x,2.0))+1.23722796/(1.0-0.00608509423/pow(x,2.0)));
    }
    float LAK9(in float x) {
        return sqrt(2.78212+0.003869888*pow(x,2.0)+0.03229938*pow(x,-2.0)-0.003179159*pow(x,-4.0)+0.0004358368*pow(x,-6.0)-2.062241e-5*pow(x,-8.0));
    }
    float LAF3(in float x) {
        return sqrt(1.0+1.73155854/(1.0-0.00953833914/pow(x,2.0))+0.150874455/(1.0-0.0407887211/pow(x,2.0))+1.06586596/(1.0-98.0758545/pow(x,2.0)));
    }
    float LAL11(in float x) {
        return sqrt(2.7037498-0.011741892*pow(x,2.0)+0.0158996*pow(x,-2.0)+0.00061265364*pow(x,-4.0)-4.6676845e-05*pow(x,-6.0)+2.6544952e-06*pow(x,-8.0));
    }
    float LLF6(in float x) {
        return sqrt(2.326858-0.02496168*pow(x,2.0)+0.002979231*pow(x,-2.0)+0.003164392*pow(x,-4.0)-0.0003498773*pow(x,-6.0)+1.777229e-5*pow(x,-8.0));
    }
    float SF7(in float x) {
        return sqrt(2.602245-0.002282728*pow(x,2.0)+0.0313239*pow(x,-2.0)-0.001109815*pow(x,-4.0)+0.0002844724*pow(x,-6.0)-1.205447e-5*pow(x,-8.0));
    }
    float SF11(in float x) {
        return sqrt(1+1.73848403/(1-0.0136068604/pow(x,2))+0.311168974/(1-0.0615960463/pow(x,2))+1.17490871/(1-121.922711/pow(x,2)));
    }
    float SF15(in float x) {
        return sqrt(1.0 + 1.53925927 * pow(x, 2.0) / (pow(x, 2.0) - 0.0119307961) + 0.247620926 * pow(x, 2.0) / (pow(x, 2.0) - 0.05560775636) + 1.03816409 * pow(x, 2.0) / (pow(x, 2.0) - 116.416747));
    }

    float SilicaN[77] = float[77](
        1.476621,
        1.476191,
        1.475771,
        1.475360,
        1.474958,
        1.474565,
        1.474181,
        1.473805,
        1.473438,
        1.473078,
        1.472727,
        1.472383,
        1.472047,
        1.471718,
        1.471396,
        1.471081,
        1.470773,
        1.470471,
        1.470176,
        1.469888,
        1.469605,
        1.469329,
        1.469058,
        1.468794,
        1.468535,
        1.468281,
        1.468033,
        1.467790,
        1.467553,
        1.467320,
        1.467092,
        1.466869,
        1.466651,
        1.466437,
        1.466228,
        1.466023,
        1.465823,
        1.465627,
        1.465434,
        1.465246,
        1.465062,
        1.464882,
        1.464705,
        1.464532,
        1.464363,
        1.464197,
        1.464034,
        1.463875,
        1.463720,
        1.463567,
        1.463418,
        1.463271,
        1.463128,
        1.462988,
        1.462850,
        1.462716,
        1.462584,
        1.462455,
        1.462328,
        1.462204,
        1.462083,
        1.461964,
        1.461847,
        1.461733,
        1.461622,
        1.461512,
        1.461405,
        1.461300,
        1.461197,
        1.461096,
        1.460997,
        1.460900,
        1.460806,
        1.460713,
        1.460622,
        1.460533,
        1.460445
    );
    float SilicaK[77] = float[77](
        0.002773,
        0.002743,
        0.002713,
        0.002684,
        0.002655,
        0.002627,
        0.002599,
        0.002571,
        0.002543,
        0.002516,
        0.002489,
        0.002463,
        0.002437,
        0.002411,
        0.002385,
        0.002360,
        0.002335,
        0.002311,
        0.002286,
        0.002262,
        0.002238,
        0.002215,
        0.002192,
        0.002169,
        0.002146,
        0.002123,
        0.002101,
        0.002079,
        0.002058,
        0.002036,
        0.002015,
        0.001994,
        0.001973,
        0.001953,
        0.001933,
        0.001913,
        0.001893,
        0.001873,
        0.001854,
        0.001835,
        0.001816,
        0.001797,
        0.001779,
        0.001761,
        0.001742,
        0.001725,
        0.001707,
        0.001689,
        0.001672,
        0.001655,
        0.001638,
        0.001621,
        0.001605,
        0.001588,
        0.001572,
        0.001556,
        0.001540,
        0.001524,
        0.001509,
        0.001494,
        0.001478,
        0.001463,
        0.001448,
        0.001434,
        0.001419,
        0.001405,
        0.001390,
        0.001376,
        0.001362,
        0.001349,
        0.001335,
        0.001322,
        0.001308,
        0.001295,
        0.001282,
        0.001269,
        0.001256
    );

    complexFloat Silica(in float wavelength) {
        int index = int(((wavelength - 390.0) / 441.0) * 77.0);
        
        return complexFloat(SilicaN[index], SilicaK[index]);
    }
#endif